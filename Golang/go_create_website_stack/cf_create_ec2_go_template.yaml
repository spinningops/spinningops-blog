Metadata: 
  License: Apache-2.0
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Start EC2 instance fo go-sample webserver project, this template will deploy on-demand EC2 instance with Docker installed.'
Parameters:
  InstanceName:
    Type: String
    Description: go-webserver
    Default: jenkins-node
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro, t2.small, t2.medium, t2.large, t2.xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: jenkins-node
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: jenkins-node
  AMI:
    Type: AWS::EC2::Image::Id 
    Description: The AMI ID to be used with our EC2 instance
    Default: ami-09e67e426f25ce0d7

Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      UserData: {"Fn::Base64": {"Fn::Join": ["", [
              "#!/bin/bash\n",
              "sudo apt update\n",
              "sudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n",
              "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n",
              "sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\" \n",
              "sudo apt update\n",
              "apt-cache policy docker-ce\n",
              "sudo apt install -y docker-ce\n",
              "sudo systemctl enable docker\n",
              "sudo docker run -it -d -p 80:8000 spinningops/go-websample\n"
            ]]}}

      Tags:
        - Key: Name
          Value: go-websample
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'AMI'

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: String
      GroupName: go-websample-sg
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: go-websample-sg



  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'EC2Instance'
      EIP: !Ref 'IPAddress'

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  InstanceIPAddress:
    Description: IP address of the newly created EC2 instance
    Value: !Ref 'IPAddress'
  EC2InstanceIP:
    Description: The instance IP
    Value: !GetAtt EC2Instance.PublicIp